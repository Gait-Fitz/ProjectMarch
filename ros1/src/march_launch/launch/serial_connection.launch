<launch>
    <arg name="arduino_master" default="false" doc="Launches the arduino master serial node when true."/>
    <arg name="arduino_master_port" default="/dev/ttyACM0" doc="Device port to use for arduino master serial connection."/>
    <arg name="arduino_master_baud" default="57600" doc="Baud rate to set for the arduino master connection."/>

    <arg name="input_device" default="true" doc="Launches the input device serial node when true."/>
    <!--
    By default, the device name is "/dev/input-device". Normally, this device does not exist.
    However, you can create a udev rule that creates this device when the input device is
    plugged in.

    Filename: /etc/udev/rules.d/83-input-device.rules
    Content:
    KERNEL=="ttyUSB[0-9]*", SUBSYSTEM=="tty", ATTRS{idVendor}=="1a86", ATTRS{idProduct}=="7523", SYMLINK+="input-device"
    -->
    <arg name="input_device_port" default="/dev/input-device" doc="Device port to use for input device serial connection. Only used when `wireless` is false."/>
    <arg name="input_device_baud" default="115200" doc="Baud rate to set for the input device connection. Only used when `wireless` is false."/>
    <arg name="wireless" default="false" doc="Use wireless connection to input device. Defaults to false."/>

    <node name="arduino_master" pkg="rosserial_python" type="serial_node.py" if="$(arg arduino_master)">
        <param name="port" value="$(arg arduino_master_port)"/>
        <param name="baud" value="$(arg arduino_master_baud)"/>
    </node>

    <node name="input_device" pkg="rosserial_python" type="serial_node.py" if="$(arg input_device)">
        <param name="port" value="tcp" if="$(arg wireless)"/>
        <param name="port" value="$(arg input_device_port)" unless="$(arg wireless)"/>
        <param name="baud" value="$(arg input_device_baud)" unless="$(arg wireless)"/>
    </node>
</launch>
