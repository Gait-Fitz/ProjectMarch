preprocessor:
  downsampling:
    voxel_grid_filter: false
    leaf_size: 0.05
    random_filter: true
    remaining_points: 5000

  normal_estimation:
    use_tree_search_method: true
    number_of_neighbours: 10
    search_radius: 0.03

  distance_filter:
    distance_threshold: 3.0

  normal_filter:
    # We only interested in points who's normal is mainly in the z direction
    allowed_length_x: 0.5
    allowed_length_y: 0.4
    # 1.0 is max length of a normalized vector
    allowed_length_z: 1.0

region_creator:
  region_growing:
    number_of_neighbours: 10
    min_cluster_size: 100
    max_cluster_size: 1000000
    # 4 / 180 * pi
    smoothness_threshold: 0.0698
    curvature_threshold: 0.5

hull_finder:
  c_hull_finder:
    # If convex is set to false, find concave hulls.
    convex: true
    # Alpha governs the detail of concave hulls, smaller is more detail.
    alpha: 0.5
    hull_dimension: 2

parameter_determiner:
  number_of_optional_foot_locations: 10
  # Remember that forward in negative in the x direction!
  stairs_locations:
    min_x_stairs: -0.2
    max_x_stairs: -0.4
    min_z_stairs: 0.1
    max_z_stairs: 0.3
    # Since we transform to the relevant foot, the y component of the foot location should be 0
    y_location: 0
  ramp_locations:
    # The end locations of the foot for the different ramp gaits
    x_flat: -0.4
    z_flat: -0.05
    x_steep: -0.2
    z_steep: -0.2
    # Since we transform to the relevant foot, the y component of the foot location should be 0
    y_location: 0
  # Set the most desirable foot location to the mid point of what the gaits are capable off
  general_most_desirable_location_is_mid: true
  # Set the most desirable foot location to the smallest / flattest step
  general_most_desirable_location_is_small: false

debug: true

