#!/usr/bin/env python
PACKAGE = "march_realsense_reader"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
#  Preprocessor parameters
gen.add("preprocessor_downsampling_voxel_grid_filter", bool_t, 0, "Voxel grid filter", False)
gen.add("preprocessor_downsampling_leaf_size", double_t, 0, "Leaf size", .05, 0.001,   1)
gen.add("preprocessor_downsampling_random_filter", bool_t,    0, "Random filter",  True)
gen.add("preprocessor_downsampling_remainig_points", double_t, 0, "Remaining points",  5000, 1000, 10000)

gen.add("preprocessor_normal_estimation_use_tree_search_method", bool_t, 0, "Tree search", True)
gen.add("preprocessor_normal_estimation_number_of_neighbours", int_t, 0, "Number of neighbours", 10, 2,   50)
gen.add("preprocessor_normal_estimation_search_radius", double_t, 0, "Search radius", 0.03, 0.01, 0.15)

gen.add("preprocessor_distance_filter_threshold", double_t, 0, "Distance threshold", 3.0, 0.5, 5.0)

gen.add("preprocessor_normal_filter_allowed_length_x", double_t, 0, "Allowed normal length in direction x", 0.5, 0.0, 1.0)
gen.add("preprocessor_normal_filter_allowed_length_y", double_t, 0, "Allowed normal length in direction y", 0.4, 0.0, 1.0)
gen.add("preprocessor_normal_filter_allowed_length_z", double_t, 0, "Allowed normal length in direction z", 1.0, 0.0, 1.0)

# Region Creator parameters
gen.add("region_creator_region_growing_number_of_neighbours", int_t, 0, "Number of neighbours for the Region growing algorithm", 10, 2, 100)
gen.add("region_creator_region_growing_min_cluster_size", int_t, 0, " ", 100, 2, 500)
gen.add("region_creator_region_growing_max_cluster_size", int_t, 0, " ", 100000, 200, 10000)
gen.add("region_creator_region_growing_smoothness_threshold", double_t, 0, " ", 0.0689, 0.00, 0.1)
gen.add("region_creator_region_growing_curvature_threshold", double_t, 0, " ", 0.5, 0.1, 5.0)

# Hull Finder parameters
gen.add("hull_finder_convex", bool_t, 0, "Whether to find convex or concave hulls", True)
gen.add("hull_finder_alpha", double_t, 0, "Maximum length from a vertex to the facet center", 0.5, 0.01, 1.0)
gen.add("hull_dimension", int_t, 0, " ", 2, 1, 10)

# Parameter Determiner parameters
gen.add("parameter_determiner_optional_foot_locations", int_t, 0, "Number of foot locations to consider", 10, 1, 20)

gen.add("parameter_determiner_stairs_locations_min_x", double_t, 0, " ", -0.2, -1, 1)
gen.add("parameter_determiner_stairs_locations_max_x", double_t, 0, " ", -0.4, -1, 1)
gen.add("parameter_determiner_stairs_locations_min_z", double_t, 0, " ", 0.1, -1, 1)
gen.add("parameter_determiner_stairs_locations_max_z", double_t, 0, " ", 0.3, -1, 1)
gen.add("parameter_determiner_stairs_locations_y", double_t, 0, " ", 0, 0, 0)

gen.add("parameter_determiner_most_desirable_loc_mid", bool_t, 0, " ", True)
gen.add("parameter_determiner_most_desirable_loc_small", bool_t, 0, " ", False)

# Debug
gen.add("debug", bool_t, 0, "If true, will publish several messages of intermediate steps", True)

exit(gen.generate(PACKAGE, "march_realsense_reader", "pointcloud_parameters"))